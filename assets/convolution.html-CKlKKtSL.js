import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as o,e as n}from"./app-DJZXSxST.js";const r={},i=n('<h1 id="卷积" tabindex="-1"><a class="header-anchor" href="#卷积"><span>卷积</span></a></h1><p>本节整理卷积方面基本概念</p><h2 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念"><span>基本概念</span></a></h2><ol><li><p>卷积：卷积就是用一个<strong>可移动的窗口</strong>（卷积核），按一定<strong>步长</strong>，与图像对应元素进行<strong>点乘相加</strong>的操作。卷积本质上也是一种对<strong>数据维度的变换</strong>，提取图像的特征，相较于全连接层直接把图像展开成一个行向量，其能<strong>更好地捕获图像的空间特征</strong>，当然通过改变参数的形状，任何全连接层都能被转换为一个等价卷积层。</p></li><li><p>池化：一种下采样方式，池化层的引入是仿照人的视觉系统对视觉输入对象进行<strong>降维和抽象</strong>。主要有三个功效：</p></li></ol><ul><li>特征不变性：池化操作是模型<strong>更加关注是否存在某些特征而不是特征具体的位置</strong>。其中不变形性包括，平移不变性、旋转不变性和尺度不变性。平移不变性是指输出结果对输入对小量平移基本保持不变，例如，输入为(1, 5, 3), 最大池化将会取 5，如果将输入右移一位得到(0, 1, 5)，输出的结果仍将为 5。对伸缩的不变形，如果原先的神经元在最大池化操作后输出 5，那么经过伸缩（尺度变换）后，最大池化操作在该神经元上很大概率的输出仍是 5；</li><li><strong>特征降维</strong>（下采样）：池化相当于在空间范围内做了维度约减，从而使模型可以抽取更加广范围的特征。同时减小了下一层的输入大小，进而减少计算量和参数个数。</li><li>在一定程度上防止<strong>过拟合</strong>，更方便优化。</li><li>实现<strong>非线性</strong>（类似 relu）。</li><li>扩大<strong>感受野</strong>。</li></ul><ol start="3"><li><p>上采样：放大图像，<strong>反卷积/转置卷积</strong>。</p></li><li><p>下采样：缩小图像，如<strong>池化</strong>与<strong>步长为 2 的卷积</strong>。</p></li><li><p>relu 激活函数：负为 0，正 y=x</p></li></ol><div class="hint-container info"><p class="hint-container-title">采用原因： -第一，采用 sigmoid 等函数，算激活函数时（指数运算），**计算量大**，反向传播求误差梯度时，求导涉及除法，计算量相对大，而采用 Relu 激活函数，整个过程的计算量节省很多。</p><p>-第二，对于深层网络，sigmoid 函数反向传播时，很容易就会出现<strong>梯度消失</strong>的情况（在 sigmoid 接近饱和区时，变换太缓慢，导数趋于 0，这种情况会造成信息丢失），从而无法完成深层网络的训练。</p><p>-第三，ReLu 会使一部分神经元的输出为 0，这样就造成了网络的稀疏性，并且减少了参数的相互依存关系，缓解了<strong>过拟合</strong>问题的发生。</p></div>',7),s=[i];function l(a,p){return e(),o("div",null,s)}const m=t(r,[["render",l],["__file","convolution.html.vue"]]),d=JSON.parse(`{"path":"/ML/convolution.html","title":"卷积","lang":"zh-CN","frontmatter":{"icon":"juanjiceng","ReadingTime":true,"date":"2024-05-27T00:00:00.000Z","Word":true,"PageView":true,"category":"ML","description":"卷积 本节整理卷积方面基本概念 基本概念 卷积：卷积就是用一个可移动的窗口（卷积核），按一定步长，与图像对应元素进行点乘相加的操作。卷积本质上也是一种对数据维度的变换，提取图像的特征，相较于全连接层直接把图像展开成一个行向量，其能更好地捕获图像的空间特征，当然通过改变参数的形状，任何全连接层都能被转换为一个等价卷积层。 池化：一种下采样方式，池化层的引...","head":[["meta",{"property":"og:url","content":"https://ryanlee-ljx.github.io/ML/convolution.html"}],["meta",{"property":"og:site_name","content":"RyanLee's blog"}],["meta",{"property":"og:title","content":"卷积"}],["meta",{"property":"og:description","content":"卷积 本节整理卷积方面基本概念 基本概念 卷积：卷积就是用一个可移动的窗口（卷积核），按一定步长，与图像对应元素进行点乘相加的操作。卷积本质上也是一种对数据维度的变换，提取图像的特征，相较于全连接层直接把图像展开成一个行向量，其能更好地捕获图像的空间特征，当然通过改变参数的形状，任何全连接层都能被转换为一个等价卷积层。 池化：一种下采样方式，池化层的引..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-27T16:18:24.000Z"}],["meta",{"property":"article:author","content":"RyanLee_ljx"}],["meta",{"property":"article:published_time","content":"2024-05-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-27T16:18:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"卷积\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-27T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-27T16:18:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"RyanLee_ljx\\",\\"email\\":\\"2284771024@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[]}],"git":{"createdTime":1716557029000,"updatedTime":1716826704000,"contributors":[{"name":"Flame","email":"2284771024@qq.com","commits":3}]},"readingTime":{"minutes":2.41,"words":723},"filePathRelative":"ML/convolution.md","localizedDate":"2024年5月27日","excerpt":"\\n<p>本节整理卷积方面基本概念</p>\\n<h2>基本概念</h2>\\n<ol>\\n<li>\\n<p>卷积：卷积就是用一个<strong>可移动的窗口</strong>（卷积核），按一定<strong>步长</strong>，与图像对应元素进行<strong>点乘相加</strong>的操作。卷积本质上也是一种对<strong>数据维度的变换</strong>，提取图像的特征，相较于全连接层直接把图像展开成一个行向量，其能<strong>更好地捕获图像的空间特征</strong>，当然通过改变参数的形状，任何全连接层都能被转换为一个等价卷积层。</p>\\n</li>\\n<li>\\n<p>池化：一种下采样方式，池化层的引入是仿照人的视觉系统对视觉输入对象进行<strong>降维和抽象</strong>。主要有三个功效：</p>\\n</li>\\n</ol>","autoDesc":true}`);export{m as comp,d as data};
